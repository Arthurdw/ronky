---
name: Bump version based on PR tag
run-name: version-bump

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    container:
      image: arthurdw/rust-ci:latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Fix repository permissions
        run: |
          chown -R $(id -u):$(id -g) .

      - name: Determine version bump
        id: version_bump
        run: |
          # Set default version bump to patch
          echo "bump_type=patch" >> $GITHUB_ENV

          REPO=$(echo "${{ github.repository }}")
          PR_NUMBER=$(echo "${{ github.event.pull_request.number }}")

          if [ -z "$PR_NUMBER" ]; then
            echo "No PR number found, defaulting to patch"
            exit 0
          fi

          # Fetch the last pull request's labels
          echo "Getting PR labels..."
          PR_LABELS=$(curl -s -H "Accept: application/vnd.github+json" https://api.github.com/repos/$REPO/pulls/$PR_NUMBER | jq -r '.labels | .[].name')
          echo "$PR_LABELS"

          # Check for labels and determine the bump type
          if echo "$PR_LABELS" | grep -q "release:major"; then
            echo "bump_type=major" >> $GITHUB_ENV
          elif echo "$PR_LABELS" | grep -q "release:minor"; then
            echo "bump_type=minor" >> $GITHUB_ENV
          elif echo "$PR_LABELS" | grep -q "release:alpha"; then
            echo "bump_type=alpha" >> $GITHUB_ENV
          elif echo "$PR_LABELS" | grep -q "release:beta"; then
            echo "bump_type=beta" >> $GITHUB_ENV
          elif echo "$PR_LABELS" | grep -q "release:rc"; then
            echo "bump_type=rc" >> $GITHUB_ENV
          elif echo "$PR_LABELS" | grep -q "release:release"; then
            echo "bump_type=release" >> $GITHUB_ENV
          fi

      - name: Bump version
        run: |
          bump_type="${{ env.bump_type }}"
          echo "Bumping version using: $bump_type"
          cargo release version $bump_type --execute --no-confirm

      - name: Extract version from Cargo.toml
        run: echo "VERSION=$(grep -m 1 '^version =' Cargo.toml | cut -d '"' -f 2)" >> $GITHUB_ENV

      - name: Commit version bump
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add Cargo.toml Cargo.lock
          git commit -m "chore(release): version bump to ${{ env.VERSION }}"
          git tag "v${{ env.VERSION}}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

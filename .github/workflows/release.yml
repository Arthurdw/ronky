name: Release

on:
  push:
    tags:
      - 'v*'

# Only run on actual tag pushes, not branch pushes
# This prevents the workflow from triggering on commits to main that happen
# during the version bump process

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false  # Don't cancel releases

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Get token
        id: get_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.RONKY_CD_APP_ID }}
          private-key: ${{ secrets.RONKY_CD_TOKEN }}
          owner: ${{ github.repository_owner }}
          repositories: ${{ github.event.repository.name }}

      - uses: actions/checkout@v5
        with:
          token: ${{ steps.get_token.outputs.token }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release --all-features

      - name: Run tests
        run: cargo test --all --release

      - name: Extract version
        id: extract-version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Check crate version matches tag
        run: |
          # Check workspace version since all crates use workspace versioning
          CARGO_VERSION=$(grep -E "^version" Cargo.toml | head -1 | cut -d'"' -f2)
          if [ "$CARGO_VERSION" != "${{ steps.extract-version.outputs.version }}" ]; then
            echo "Error: Cargo.toml workspace version ($CARGO_VERSION) doesn't match tag version (${{ steps.extract-version.outputs.version }})"
            exit 1
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ steps.get_token.outputs.token }}
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-beta') || contains(github.ref, '-alpha') }}

      - name: Publish to crates.io
        if: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          # Publish in dependency order with retries for crates.io propagation
          cargo publish -p arri_repr

          # Wait for crates.io to index the package (typically takes 30-60 seconds)
          echo "Waiting for arri_repr to be available on crates.io..."
          for i in {1..12}; do
            if cargo search arri_repr | grep -q "^arri_repr = "; then
              echo "arri_repr is now available"
              break
            fi
            echo "Attempt $i/12: Package not yet available, waiting..."
            sleep 10
          done

          cargo publish -p ronky_derive

          # Wait for ronky_derive to be indexed
          echo "Waiting for ronky_derive to be available on crates.io..."
          for i in {1..12}; do
            if cargo search ronky_derive | grep -q "^ronky_derive = "; then
              echo "ronky_derive is now available"
              break
            fi
            echo "Attempt $i/12: Package not yet available, waiting..."
            sleep 10
          done

          cargo publish -p ronky
